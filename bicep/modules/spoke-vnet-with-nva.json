{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.36.177.2456",
      "templateHash": "4180155687104564743"
    }
  },
  "parameters": {
    "vnetName": {
      "type": "string",
      "metadata": {
        "description": "Virtual network name"
      }
    },
    "vnetAddressSpace": {
      "type": "string",
      "metadata": {
        "description": "Virtual network address space"
      }
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "Location for the resources"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username for VMs"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password for VMs"
      }
    },
    "nvmVmSize": {
      "type": "string",
      "defaultValue": "Standard_B2s",
      "metadata": {
        "description": "VM size for NVA (should be Standard_B2s or larger for RRAS)"
      }
    },
    "testVmSize": {
      "type": "string",
      "defaultValue": "Standard_B1s",
      "metadata": {
        "description": "VM size for test VM (can be smaller)"
      }
    },
    "environmentPrefix": {
      "type": "string",
      "metadata": {
        "description": "Environment prefix"
      }
    },
    "tags": {
      "type": "object",
      "metadata": {
        "description": "Tags to apply to resources"
      }
    }
  },
  "variables": {
    "vnetPrefix": "[split(parameters('vnetAddressSpace'), '/')[0]]",
    "baseOctets": "[split(variables('vnetPrefix'), '.')]",
    "baseNetwork": "[format('{0}.{1}.{2}', variables('baseOctets')[0], variables('baseOctets')[1], variables('baseOctets')[2])]",
    "nvaSubnetPrefix": "[format('{0}.0/26', variables('baseNetwork'))]",
    "vmSubnetPrefix": "[format('{0}.128/26', variables('baseNetwork'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2024-05-01",
      "name": "[parameters('vnetName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnetAddressSpace')]"
          ]
        },
        "subnets": [
          {
            "name": "NvaSubnet",
            "properties": {
              "addressPrefix": "[variables('nvaSubnetPrefix')]"
            }
          },
          {
            "name": "VmSubnet",
            "properties": {
              "addressPrefix": "[variables('vmSubnetPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-spoke1-nsg', parameters('environmentPrefix')))]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-spoke1-nsg', parameters('environmentPrefix')))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2024-05-01",
      "name": "[format('{0}-spoke1-nsg', parameters('environmentPrefix'))]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "securityRules": [
          {
            "name": "AllowBGPFromVirtualNetwork",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "179",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1100,
              "direction": "Inbound",
              "description": "Allow BGP peering within virtual network only"
            }
          },
          {
            "name": "AllowICMPFromVirtualNetwork",
            "properties": {
              "protocol": "Icmp",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1200,
              "direction": "Inbound",
              "description": "Allow ICMP ping within virtual network only"
            }
          },
          {
            "name": "DenyAllOtherInbound",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 4096,
              "direction": "Inbound",
              "description": "Explicit deny all other inbound traffic"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2024-05-01",
      "name": "[format('{0}-nva-pip', parameters('environmentPrefix'))]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2024-05-01",
      "name": "[format('{0}-test1-pip', parameters('environmentPrefix'))]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2024-05-01",
      "name": "[format('{0}-nva-nic', parameters('environmentPrefix'))]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[format('{0}.10', substring(variables('nvaSubnetPrefix'), 0, lastIndexOf(variables('nvaSubnetPrefix'), '.')))]",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-nva-pip', parameters('environmentPrefix')))]"
              },
              "subnet": {
                "id": "[format('{0}/subnets/NvaSubnet', resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName')))]"
              }
            }
          }
        ],
        "enableIPForwarding": true
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-nva-pip', parameters('environmentPrefix')))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2024-05-01",
      "name": "[format('{0}-test1-nic', parameters('environmentPrefix'))]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-test1-pip', parameters('environmentPrefix')))]"
              },
              "subnet": {
                "id": "[format('{0}/subnets/VmSubnet', resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName')))]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-test1-pip', parameters('environmentPrefix')))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2024-07-01",
      "name": "[format('{0}-nva-vm', parameters('environmentPrefix'))]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('nvmVmSize')]"
        },
        "osProfile": {
          "computerName": "nva-vm",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "enableAutomaticUpdates": true,
            "provisionVMAgent": true
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2022-datacenter",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "Premium_LRS"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nva-nic', parameters('environmentPrefix')))]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nva-nic', parameters('environmentPrefix')))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2024-07-01",
      "name": "TestVM-Spoke1",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('testVmSize')]"
        },
        "osProfile": {
          "computerName": "TestVM-Spoke1",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "enableAutomaticUpdates": true,
            "provisionVMAgent": true
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2022-datacenter",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-test1-nic', parameters('environmentPrefix')))]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-test1-nic', parameters('environmentPrefix')))]"
      ]
    }
  ],
  "outputs": {
    "vnetId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
    },
    "nvaVmName": {
      "type": "string",
      "value": "[format('{0}-nva-vm', parameters('environmentPrefix'))]"
    },
    "testVmName": {
      "type": "string",
      "value": "TestVM-Spoke1"
    },
    "nvaPrivateIp": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/networkInterfaces', format('{0}-nva-nic', parameters('environmentPrefix'))), '2024-05-01').ipConfigurations[0].properties.privateIPAddress]"
    }
  }
}