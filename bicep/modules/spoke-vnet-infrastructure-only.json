{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.36.177.2456",
      "templateHash": "7783633875615401229"
    }
  },
  "parameters": {
    "vnetName": {
      "type": "string",
      "metadata": {
        "description": "VNet name"
      }
    },
    "vnetAddressSpace": {
      "type": "string",
      "metadata": {
        "description": "VNet address space"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Azure region for deployment"
      }
    },
    "environmentPrefix": {
      "type": "string",
      "metadata": {
        "description": "Environment prefix for naming"
      }
    },
    "includeNvaSubnet": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Include NVA subnet"
      }
    },
    "includeRouteServerSubnet": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Include Route Server subnet"
      }
    },
    "tags": {
      "type": "object",
      "metadata": {
        "description": "Tags to apply to resources"
      }
    },
    "deployerPublicIP": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Deployer public IP for RDP access (optional)"
      }
    }
  },
  "variables": {
    "baseOctets": "[split(parameters('vnetAddressSpace'), '.')]",
    "baseNetwork": "[format('{0}.{1}.{2}', variables('baseOctets')[0], variables('baseOctets')[1], variables('baseOctets')[2])]",
    "baseSubnets": [
      {
        "name": "VmSubnet",
        "properties": {
          "addressPrefix": "[format('{0}.128/26', variables('baseNetwork'))]",
          "networkSecurityGroup": {
            "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-{1}-nsg', parameters('environmentPrefix'), parameters('vnetName')))]"
          }
        }
      }
    ],
    "nvaSubnet": "[if(parameters('includeNvaSubnet'), createArray(createObject('name', 'NvaSubnet', 'properties', createObject('addressPrefix', format('{0}.0/26', variables('baseNetwork'))))), createArray())]",
    "routeServerSubnet": "[if(parameters('includeRouteServerSubnet'), createArray(createObject('name', 'RouteServerSubnet', 'properties', createObject('addressPrefix', format('{0}.64/26', variables('baseNetwork'))))), createArray())]",
    "allSubnets": "[concat(variables('baseSubnets'), variables('nvaSubnet'), variables('routeServerSubnet'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2024-05-01",
      "name": "[format('{0}-{1}-nsg', parameters('environmentPrefix'), parameters('vnetName'))]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "securityRules": "[concat(createArray(), if(not(equals(parameters('deployerPublicIP'), '')), createArray(createObject('name', 'AllowRDPFromDeployer', 'properties', createObject('protocol', 'Tcp', 'sourcePortRange', '*', 'destinationPortRange', '3389', 'sourceAddressPrefix', format('{0}/32', parameters('deployerPublicIP')), 'destinationAddressPrefix', '*', 'access', 'Allow', 'priority', 1000, 'direction', 'Inbound', 'description', 'Allow RDP from deployer IP'))), createArray()), createArray(createObject('name', 'AllowBGPFromVirtualNetwork', 'properties', createObject('protocol', 'Tcp', 'sourcePortRange', '*', 'destinationPortRange', '179', 'sourceAddressPrefix', 'VirtualNetwork', 'destinationAddressPrefix', '*', 'access', 'Allow', 'priority', 1100, 'direction', 'Inbound', 'description', 'Allow BGP peering within virtual network only')), createObject('name', 'AllowICMPFromVirtualNetwork', 'properties', createObject('protocol', 'Icmp', 'sourcePortRange', '*', 'destinationPortRange', '*', 'sourceAddressPrefix', 'VirtualNetwork', 'destinationAddressPrefix', '*', 'access', 'Allow', 'priority', 1200, 'direction', 'Inbound', 'description', 'Allow ICMP ping within virtual network only'))))]"
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2024-05-01",
      "name": "[parameters('vnetName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnetAddressSpace')]"
          ]
        },
        "subnets": "[variables('allSubnets')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-{1}-nsg', parameters('environmentPrefix'), parameters('vnetName')))]"
      ]
    }
  ],
  "outputs": {
    "vnetId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
    },
    "vnetName": {
      "type": "string",
      "value": "[parameters('vnetName')]"
    },
    "nsgId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-{1}-nsg', parameters('environmentPrefix'), parameters('vnetName')))]"
    }
  }
}