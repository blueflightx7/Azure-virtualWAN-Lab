{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.37.4.10188",
      "templateHash": "14411090756363094170"
    }
  },
  "parameters": {
    "environmentPrefix": {
      "type": "string",
      "defaultValue": "vwanlab",
      "metadata": {
        "description": "Environment prefix for resource naming"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Admin username for VMs"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Admin password for VMs"
      }
    },
    "deployTestVm": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Deploy Test VM (false if VM already exists)"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_B2s",
      "metadata": {
        "description": "VM size for test VM"
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {
        "Environment": "Lab",
        "Project": "VWAN-Demo",
        "Purpose": "Route-Server-BGP-Integration"
      },
      "metadata": {
        "description": "Tags for all resources"
      }
    },
    "deployerPublicIP": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Deployer public IP for RDP access (optional)"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2024-05-01",
      "name": "[format('{0}-spoke3-route-server-pip', parameters('environmentPrefix'))]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "publicIPAddressVersion": "IPv4"
      }
    },
    {
      "type": "Microsoft.Network/virtualHubs",
      "apiVersion": "2024-05-01",
      "name": "[format('{0}-spoke3-route-server', parameters('environmentPrefix'))]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "sku": "Standard",
        "allowBranchToBranchTraffic": true,
        "virtualRouterAsn": 65515
      }
    },
    {
      "type": "Microsoft.Network/virtualHubs/ipConfigurations",
      "apiVersion": "2024-05-01",
      "name": "[format('{0}/{1}', format('{0}-spoke3-route-server', parameters('environmentPrefix')), 'ipconfig1')]",
      "properties": {
        "subnet": {
          "id": "[format('{0}/subnets/RouteServerSubnet', resourceId('Microsoft.Network/virtualNetworks', format('{0}-spoke3-vnet', parameters('environmentPrefix'))))]"
        },
        "publicIPAddress": {
          "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-spoke3-route-server-pip', parameters('environmentPrefix')))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualHubs', format('{0}-spoke3-route-server', parameters('environmentPrefix')))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-spoke3-route-server-pip', parameters('environmentPrefix')))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2024-05-01",
      "name": "[format('{0}-spoke3-test-nsg', parameters('environmentPrefix'))]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "securityRules": "[concat(createArray(), if(not(equals(parameters('deployerPublicIP'), '')), createArray(createObject('name', 'AllowRDPFromDeployer', 'properties', createObject('protocol', 'Tcp', 'sourcePortRange', '*', 'destinationPortRange', '3389', 'sourceAddressPrefix', format('{0}/32', parameters('deployerPublicIP')), 'destinationAddressPrefix', '*', 'access', 'Allow', 'priority', 1000, 'direction', 'Inbound', 'description', 'Allow RDP from deployer IP'))), createArray()), createArray(createObject('name', 'AllowBGPFromVirtualNetwork', 'properties', createObject('protocol', 'Tcp', 'sourcePortRange', '*', 'destinationPortRange', '179', 'sourceAddressPrefix', 'VirtualNetwork', 'destinationAddressPrefix', '*', 'access', 'Allow', 'priority', 1100, 'direction', 'Inbound', 'description', 'Allow BGP peering within virtual network only')), createObject('name', 'AllowICMPFromVirtualNetwork', 'properties', createObject('protocol', 'Icmp', 'sourcePortRange', '*', 'destinationPortRange', '*', 'sourceAddressPrefix', 'VirtualNetwork', 'destinationAddressPrefix', '*', 'access', 'Allow', 'priority', 1200, 'direction', 'Inbound', 'description', 'Allow ICMP ping within virtual network only'))))]"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2024-05-01",
      "name": "[format('{0}-spoke3-test-vm-pip', parameters('environmentPrefix'))]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "publicIPAddressVersion": "IPv4"
      }
    },
    {
      "condition": "[parameters('deployTestVm')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2024-05-01",
      "name": "[format('{0}-spoke3-test-vm-nic', parameters('environmentPrefix'))]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[format('{0}/subnets/VmSubnet', resourceId('Microsoft.Network/virtualNetworks', format('{0}-spoke3-vnet', parameters('environmentPrefix'))))]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-spoke3-test-vm-pip', parameters('environmentPrefix')))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-spoke3-test-nsg', parameters('environmentPrefix')))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-spoke3-test-nsg', parameters('environmentPrefix')))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-spoke3-test-vm-pip', parameters('environmentPrefix')))]"
      ]
    },
    {
      "condition": "[parameters('deployTestVm')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2024-07-01",
      "name": "[format('{0}-spoke3-test-vm', parameters('environmentPrefix'))]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "spoke3-test",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "enableAutomaticUpdates": true,
            "provisionVMAgent": true
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2022-datacenter",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
            },
            "name": "[format('{0}-spoke3-test-osdisk', parameters('environmentPrefix'))]"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-spoke3-test-vm-nic', parameters('environmentPrefix')))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-spoke3-test-vm-nic', parameters('environmentPrefix')))]"
      ]
    }
  ],
  "outputs": {
    "routeServerId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/virtualHubs', format('{0}-spoke3-route-server', parameters('environmentPrefix')))]"
    },
    "routeServerName": {
      "type": "string",
      "value": "[format('{0}-spoke3-route-server', parameters('environmentPrefix'))]"
    },
    "routeServerPublicIpId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-spoke3-route-server-pip', parameters('environmentPrefix')))]"
    },
    "testVmId": {
      "type": "string",
      "value": "[if(parameters('deployTestVm'), resourceId('Microsoft.Compute/virtualMachines', format('{0}-spoke3-test-vm', parameters('environmentPrefix'))), 'vm-not-deployed')]"
    },
    "testVmPrivateIp": {
      "type": "string",
      "value": "[if(parameters('deployTestVm'), reference(resourceId('Microsoft.Network/networkInterfaces', format('{0}-spoke3-test-vm-nic', parameters('environmentPrefix'))), '2024-05-01').ipConfigurations[0].properties.privateIPAddress, 'vm-not-deployed')]"
    }
  }
}